<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>NX - chsheets</title><link href="http://blog.hoxnox.com/" rel="alternate"></link><link href="http://blog.hoxnox.com/feeds/chsheets.atom.xml" rel="self"></link><id>http://blog.hoxnox.com/</id><updated>2012-08-02T00:00:00+04:00</updated><entry><title>git cheat sheet</title><link href="http://blog.hoxnox.com/chsheets/git-en.html" rel="alternate"></link><published>2012-08-02T00:00:00+04:00</published><updated>2012-08-02T00:00:00+04:00</updated><author><name>Merder hoxnox Kim &lt;hoxnox@gmail.com&gt;</name></author><id>tag:blog.hoxnox.com,2012-08-02:/chsheets/git-en.html</id><summary type="html">&lt;p class="first last"&gt;git commands, that I can forget&lt;/p&gt;
</summary><content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Change the origin of the repository&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Edit &lt;cite&gt;.git/config&lt;/cite&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
[remote &amp;quot;origin&amp;quot;]
url = &amp;lt;line to  change&amp;gt;
...
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Cancel previous commit&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git reset HEAD^
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Commit, rewriting previus&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit --amend
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Remove from staged, but keep the file&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git rm --chached &amp;lt;file&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Remote repo&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git remote add frank http://frnak.com/git/project
git remote add pb git://github.com/paulboone/ticgit.git
git remote -v
git remote show origin
git remote show frank
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Working with remote branches&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Push your local branch to the origin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push origin &amp;lt;branchname&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete branch from the origin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push origin :&amp;lt;branchname&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Tagging&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git tag -a v1.0 -m&amp;quot;Version 1.0&amp;quot;
git tag -a v1.2 9fceb02
git show v1.*
git push origin v1.0
git push origin --tags&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Autocomplete (gentoo)&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo &amp;quot;source /usr/share/bash-completion/git&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Подпроекты
1. подмодули (много подводных камней)&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git update-index --skip-worktree core .gitmodules
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic" start="2"&gt;
&lt;li&gt;&lt;p class="first"&gt;Поддеревья (можно хранить в отдельной ветке клон удаленного репозитория и, когда надо, сливать
эту ветку с основной&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git remote add core_remote /repo/core.git
git fetch core_remote
git checkout -b core_branch core_remote/master
git checkout master
git read-tree --prefix=&amp;lt;prefix&amp;gt; -u core_branch

для обновления ветки
git checkout core_branch
git pull
git checkout master
git merge --squash -s subtree --no-commit core_branch

разница с веткой
git diff-tree -p core_branch
разница с удаленным репозиторием
git diff-tree -p core_remote/master
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Проблема зависимостей.&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Допустим имеется проект core (например библиотека работы со строками). Имеются проекты a и b,
которые используют проект core. Допустим мы создаем проект super, который будет использовать
проекты a,b и core. Как нам лучше организовать процесс, чтобы не запутаться в трёх различных
копиях core. Например, что делать если, работая в a, мы поменяли core?&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Если git merge срабатывает не в то поддререво используем &amp;quot;ручное управление&amp;quot;. Пример:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git merge --squash --no-commit -s recursive -X subtree=src -X theirs nx_socket@rmt
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="git"></category></entry></feed>